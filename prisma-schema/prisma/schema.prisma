// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client" // 客户端代码生成目录
}

generator docs {
  provider = "node node_modules/prisma-docs-generator"
  output   = "../generated/docs"
}

generator json {
  provider = "node node_modules/prisma-json-schema-generator"
  output   = "../generated/json"
}

// 数据库连接信息
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL") // 环境变量
}

model User {
  id    Int     @id @default(autoincrement())
  email String  @unique
  name  String?
}

model Test {
  id  Int    @id @default(autoincrement())
  aaa String @db.Text // @db 访问数据库类型
  bbb Int    @map("bbb2") @db.TinyInt // @map 重命名字段
  ccc String @unique @db.VarChar(50)

  @@index([ccc, bbb]) // 复合索引
  @@map("tset_test") // 表名
}

model Department {
  id         Int        @id @default(autoincrement())
  name       String     @db.VarChar(20)
  createTime DateTime   @default(now())
  updateTime DateTime   @updatedAt
  employees  Employee[]
}

model Employee {
  id    Int    @id @default(autoincrement())
  name  String @db.VarChar(20)
  phone String @db.VarChar(30)

  departmentId Int // @unique 添加 @unique 一对多关系就变为了一对一
  department   Department @relation(fields: [departmentId], references: [id])
}

model Post {
  id        Int          @id @default(autoincrement())
  title     String
  content   String?
  published Boolean      @default(false)
  tags      TagOnPosts[]
}

model Tag {
  id    Int          @id @default(autoincrement())
  name  String
  posts TagOnPosts[]
}

model TagOnPosts {
  post   Post @relation(fields: [postId], references: [id])
  postId Int

  tag   Tag @relation(fields: [tagId], references: [id])
  tagId Int

  @@id([postId, tagId])
}

model AAA {
  id   Int     @id @default(autoincrement())
  name String?
  role EEE     @default(CCC)
}

enum EEE {
  BBB
  CCC
  DDD
}
